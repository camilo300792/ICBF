#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Datos
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ICBF")]
	public partial class ORMDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertCiudad(Ciudad instance);
    partial void UpdateCiudad(Ciudad instance);
    partial void DeleteCiudad(Ciudad instance);
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    partial void InsertDatosInfante(DatosInfante instance);
    partial void UpdateDatosInfante(DatosInfante instance);
    partial void DeleteDatosInfante(DatosInfante instance);
    partial void InsertJardin(Jardin instance);
    partial void UpdateJardin(Jardin instance);
    partial void DeleteJardin(Jardin instance);
    partial void InsertMaster(Master instance);
    partial void UpdateMaster(Master instance);
    partial void DeleteMaster(Master instance);
    partial void InsertPermiso(Permiso instance);
    partial void UpdatePermiso(Permiso instance);
    partial void DeletePermiso(Permiso instance);
    partial void InsertPermisoRol(PermisoRol instance);
    partial void UpdatePermisoRol(PermisoRol instance);
    partial void DeletePermisoRol(PermisoRol instance);
    partial void InsertPersona(Persona instance);
    partial void UpdatePersona(Persona instance);
    partial void DeletePersona(Persona instance);
    partial void InsertRegistroAcademico(RegistroAcademico instance);
    partial void UpdateRegistroAcademico(RegistroAcademico instance);
    partial void DeleteRegistroAcademico(RegistroAcademico instance);
    partial void InsertRegistroAsistencia(RegistroAsistencia instance);
    partial void UpdateRegistroAsistencia(RegistroAsistencia instance);
    partial void DeleteRegistroAsistencia(RegistroAsistencia instance);
    partial void InsertRol(Rol instance);
    partial void UpdateRol(Rol instance);
    partial void DeleteRol(Rol instance);
    #endregion
		
		public ORMDataContext() : 
				base(global::Datos.Properties.Settings.Default.ICBFConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ORMDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ORMDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ORMDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ORMDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Ciudad> Ciudad
		{
			get
			{
				return this.GetTable<Ciudad>();
			}
		}
		
		public System.Data.Linq.Table<Usuario> Usuario
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
		
		public System.Data.Linq.Table<DatosInfante> DatosInfante
		{
			get
			{
				return this.GetTable<DatosInfante>();
			}
		}
		
		public System.Data.Linq.Table<Jardin> Jardin
		{
			get
			{
				return this.GetTable<Jardin>();
			}
		}
		
		public System.Data.Linq.Table<Master> Master
		{
			get
			{
				return this.GetTable<Master>();
			}
		}
		
		public System.Data.Linq.Table<Permiso> Permiso
		{
			get
			{
				return this.GetTable<Permiso>();
			}
		}
		
		public System.Data.Linq.Table<PermisoRol> PermisoRol
		{
			get
			{
				return this.GetTable<PermisoRol>();
			}
		}
		
		public System.Data.Linq.Table<Persona> Persona
		{
			get
			{
				return this.GetTable<Persona>();
			}
		}
		
		public System.Data.Linq.Table<RegistroAcademico> RegistroAcademico
		{
			get
			{
				return this.GetTable<RegistroAcademico>();
			}
		}
		
		public System.Data.Linq.Table<RegistroAsistencia> RegistroAsistencia
		{
			get
			{
				return this.GetTable<RegistroAsistencia>();
			}
		}
		
		public System.Data.Linq.Table<Rol> Rol
		{
			get
			{
				return this.GetTable<Rol>();
			}
		}
		
		public System.Data.Linq.Table<ListarJardines> ListarJardines
		{
			get
			{
				return this.GetTable<ListarJardines>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ciudad")]
	public partial class Ciudad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idCiudad;
		
		private string _nombre;
		
		private byte _habilitado;
		
		private EntitySet<Persona> _Persona;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidCiudadChanging(int value);
    partial void OnidCiudadChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnhabilitadoChanging(byte value);
    partial void OnhabilitadoChanged();
    #endregion
		
		public Ciudad()
		{
			this._Persona = new EntitySet<Persona>(new Action<Persona>(this.attach_Persona), new Action<Persona>(this.detach_Persona));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCiudad", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idCiudad
		{
			get
			{
				return this._idCiudad;
			}
			set
			{
				if ((this._idCiudad != value))
				{
					this.OnidCiudadChanging(value);
					this.SendPropertyChanging();
					this._idCiudad = value;
					this.SendPropertyChanged("idCiudad");
					this.OnidCiudadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_habilitado", DbType="TinyInt NOT NULL")]
		public byte habilitado
		{
			get
			{
				return this._habilitado;
			}
			set
			{
				if ((this._habilitado != value))
				{
					this.OnhabilitadoChanging(value);
					this.SendPropertyChanging();
					this._habilitado = value;
					this.SendPropertyChanged("habilitado");
					this.OnhabilitadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ciudad_Persona", Storage="_Persona", ThisKey="idCiudad", OtherKey="ciudadNacimiento")]
		public EntitySet<Persona> Persona
		{
			get
			{
				return this._Persona;
			}
			set
			{
				this._Persona.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Persona(Persona entity)
		{
			this.SendPropertyChanging();
			entity.Ciudad = this;
		}
		
		private void detach_Persona(Persona entity)
		{
			this.SendPropertyChanging();
			entity.Ciudad = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuario")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idUsuario;
		
		private int _idPersona;
		
		private int _idRol;
		
		private string _username;
		
		private string _contrasena;
		
		private byte _habilitado;
		
		private EntitySet<DatosInfante> _DatosInfante;
		
		private EntityRef<Persona> _Persona;
		
		private EntityRef<Rol> _Rol;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidUsuarioChanging(int value);
    partial void OnidUsuarioChanged();
    partial void OnidPersonaChanging(int value);
    partial void OnidPersonaChanged();
    partial void OnidRolChanging(int value);
    partial void OnidRolChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OncontrasenaChanging(string value);
    partial void OncontrasenaChanged();
    partial void OnhabilitadoChanging(byte value);
    partial void OnhabilitadoChanged();
    #endregion
		
		public Usuario()
		{
			this._DatosInfante = new EntitySet<DatosInfante>(new Action<DatosInfante>(this.attach_DatosInfante), new Action<DatosInfante>(this.detach_DatosInfante));
			this._Persona = default(EntityRef<Persona>);
			this._Rol = default(EntityRef<Rol>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUsuario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idUsuario
		{
			get
			{
				return this._idUsuario;
			}
			set
			{
				if ((this._idUsuario != value))
				{
					this.OnidUsuarioChanging(value);
					this.SendPropertyChanging();
					this._idUsuario = value;
					this.SendPropertyChanged("idUsuario");
					this.OnidUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPersona", DbType="Int NOT NULL")]
		public int idPersona
		{
			get
			{
				return this._idPersona;
			}
			set
			{
				if ((this._idPersona != value))
				{
					if (this._Persona.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPersonaChanging(value);
					this.SendPropertyChanging();
					this._idPersona = value;
					this.SendPropertyChanged("idPersona");
					this.OnidPersonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idRol", DbType="Int NOT NULL")]
		public int idRol
		{
			get
			{
				return this._idRol;
			}
			set
			{
				if ((this._idRol != value))
				{
					if (this._Rol.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidRolChanging(value);
					this.SendPropertyChanging();
					this._idRol = value;
					this.SendPropertyChanged("idRol");
					this.OnidRolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contrasena", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string contrasena
		{
			get
			{
				return this._contrasena;
			}
			set
			{
				if ((this._contrasena != value))
				{
					this.OncontrasenaChanging(value);
					this.SendPropertyChanging();
					this._contrasena = value;
					this.SendPropertyChanged("contrasena");
					this.OncontrasenaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_habilitado", DbType="TinyInt NOT NULL")]
		public byte habilitado
		{
			get
			{
				return this._habilitado;
			}
			set
			{
				if ((this._habilitado != value))
				{
					this.OnhabilitadoChanging(value);
					this.SendPropertyChanging();
					this._habilitado = value;
					this.SendPropertyChanged("habilitado");
					this.OnhabilitadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_DatosInfante", Storage="_DatosInfante", ThisKey="idUsuario", OtherKey="idAcudiente")]
		public EntitySet<DatosInfante> DatosInfante
		{
			get
			{
				return this._DatosInfante;
			}
			set
			{
				this._DatosInfante.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persona_Usuario", Storage="_Persona", ThisKey="idPersona", OtherKey="idPersona", IsForeignKey=true)]
		public Persona Persona
		{
			get
			{
				return this._Persona.Entity;
			}
			set
			{
				Persona previousValue = this._Persona.Entity;
				if (((previousValue != value) 
							|| (this._Persona.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Persona.Entity = null;
						previousValue.Usuario.Remove(this);
					}
					this._Persona.Entity = value;
					if ((value != null))
					{
						value.Usuario.Add(this);
						this._idPersona = value.idPersona;
					}
					else
					{
						this._idPersona = default(int);
					}
					this.SendPropertyChanged("Persona");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rol_Usuario", Storage="_Rol", ThisKey="idRol", OtherKey="idRol", IsForeignKey=true)]
		public Rol Rol
		{
			get
			{
				return this._Rol.Entity;
			}
			set
			{
				Rol previousValue = this._Rol.Entity;
				if (((previousValue != value) 
							|| (this._Rol.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rol.Entity = null;
						previousValue.Usuario.Remove(this);
					}
					this._Rol.Entity = value;
					if ((value != null))
					{
						value.Usuario.Add(this);
						this._idRol = value.idRol;
					}
					else
					{
						this._idRol = default(int);
					}
					this.SendPropertyChanged("Rol");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DatosInfante(DatosInfante entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_DatosInfante(DatosInfante entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DatosInfante")]
	public partial class DatosInfante : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idDatosInfante;
		
		private string _eps;
		
		private int _idJardin;
		
		private int _idAcudiente;
		
		private int _idInfante;
		
		private double _peso;
		
		private double _talla;
		
		private System.DateTime _fechaIngreso;
		
		private System.Nullable<System.DateTime> _fechaSalida;
		
		private byte _habilitado;
		
		private EntitySet<RegistroAcademico> _RegistroAcademico;
		
		private EntitySet<RegistroAsistencia> _RegistroAsistencia;
		
		private EntityRef<Usuario> _Usuario;
		
		private EntityRef<Jardin> _Jardin;
		
		private EntityRef<Persona> _Persona;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidDatosInfanteChanging(int value);
    partial void OnidDatosInfanteChanged();
    partial void OnepsChanging(string value);
    partial void OnepsChanged();
    partial void OnidJardinChanging(int value);
    partial void OnidJardinChanged();
    partial void OnidAcudienteChanging(int value);
    partial void OnidAcudienteChanged();
    partial void OnidInfanteChanging(int value);
    partial void OnidInfanteChanged();
    partial void OnpesoChanging(double value);
    partial void OnpesoChanged();
    partial void OntallaChanging(double value);
    partial void OntallaChanged();
    partial void OnfechaIngresoChanging(System.DateTime value);
    partial void OnfechaIngresoChanged();
    partial void OnfechaSalidaChanging(System.Nullable<System.DateTime> value);
    partial void OnfechaSalidaChanged();
    partial void OnhabilitadoChanging(byte value);
    partial void OnhabilitadoChanged();
    #endregion
		
		public DatosInfante()
		{
			this._RegistroAcademico = new EntitySet<RegistroAcademico>(new Action<RegistroAcademico>(this.attach_RegistroAcademico), new Action<RegistroAcademico>(this.detach_RegistroAcademico));
			this._RegistroAsistencia = new EntitySet<RegistroAsistencia>(new Action<RegistroAsistencia>(this.attach_RegistroAsistencia), new Action<RegistroAsistencia>(this.detach_RegistroAsistencia));
			this._Usuario = default(EntityRef<Usuario>);
			this._Jardin = default(EntityRef<Jardin>);
			this._Persona = default(EntityRef<Persona>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDatosInfante", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idDatosInfante
		{
			get
			{
				return this._idDatosInfante;
			}
			set
			{
				if ((this._idDatosInfante != value))
				{
					this.OnidDatosInfanteChanging(value);
					this.SendPropertyChanging();
					this._idDatosInfante = value;
					this.SendPropertyChanged("idDatosInfante");
					this.OnidDatosInfanteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eps", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string eps
		{
			get
			{
				return this._eps;
			}
			set
			{
				if ((this._eps != value))
				{
					this.OnepsChanging(value);
					this.SendPropertyChanging();
					this._eps = value;
					this.SendPropertyChanged("eps");
					this.OnepsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idJardin", DbType="Int NOT NULL")]
		public int idJardin
		{
			get
			{
				return this._idJardin;
			}
			set
			{
				if ((this._idJardin != value))
				{
					if (this._Jardin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidJardinChanging(value);
					this.SendPropertyChanging();
					this._idJardin = value;
					this.SendPropertyChanged("idJardin");
					this.OnidJardinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAcudiente", DbType="Int NOT NULL")]
		public int idAcudiente
		{
			get
			{
				return this._idAcudiente;
			}
			set
			{
				if ((this._idAcudiente != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidAcudienteChanging(value);
					this.SendPropertyChanging();
					this._idAcudiente = value;
					this.SendPropertyChanged("idAcudiente");
					this.OnidAcudienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idInfante", DbType="Int NOT NULL")]
		public int idInfante
		{
			get
			{
				return this._idInfante;
			}
			set
			{
				if ((this._idInfante != value))
				{
					if (this._Persona.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidInfanteChanging(value);
					this.SendPropertyChanging();
					this._idInfante = value;
					this.SendPropertyChanged("idInfante");
					this.OnidInfanteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_peso", DbType="Float NOT NULL")]
		public double peso
		{
			get
			{
				return this._peso;
			}
			set
			{
				if ((this._peso != value))
				{
					this.OnpesoChanging(value);
					this.SendPropertyChanging();
					this._peso = value;
					this.SendPropertyChanged("peso");
					this.OnpesoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_talla", DbType="Float NOT NULL")]
		public double talla
		{
			get
			{
				return this._talla;
			}
			set
			{
				if ((this._talla != value))
				{
					this.OntallaChanging(value);
					this.SendPropertyChanging();
					this._talla = value;
					this.SendPropertyChanged("talla");
					this.OntallaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fechaIngreso", DbType="DateTime NOT NULL")]
		public System.DateTime fechaIngreso
		{
			get
			{
				return this._fechaIngreso;
			}
			set
			{
				if ((this._fechaIngreso != value))
				{
					this.OnfechaIngresoChanging(value);
					this.SendPropertyChanging();
					this._fechaIngreso = value;
					this.SendPropertyChanged("fechaIngreso");
					this.OnfechaIngresoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fechaSalida", DbType="DateTime")]
		public System.Nullable<System.DateTime> fechaSalida
		{
			get
			{
				return this._fechaSalida;
			}
			set
			{
				if ((this._fechaSalida != value))
				{
					this.OnfechaSalidaChanging(value);
					this.SendPropertyChanging();
					this._fechaSalida = value;
					this.SendPropertyChanged("fechaSalida");
					this.OnfechaSalidaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_habilitado", DbType="TinyInt NOT NULL")]
		public byte habilitado
		{
			get
			{
				return this._habilitado;
			}
			set
			{
				if ((this._habilitado != value))
				{
					this.OnhabilitadoChanging(value);
					this.SendPropertyChanging();
					this._habilitado = value;
					this.SendPropertyChanged("habilitado");
					this.OnhabilitadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DatosInfante_RegistroAcademico", Storage="_RegistroAcademico", ThisKey="idDatosInfante", OtherKey="idInfante")]
		public EntitySet<RegistroAcademico> RegistroAcademico
		{
			get
			{
				return this._RegistroAcademico;
			}
			set
			{
				this._RegistroAcademico.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DatosInfante_RegistroAsistencia", Storage="_RegistroAsistencia", ThisKey="idDatosInfante", OtherKey="idInfante")]
		public EntitySet<RegistroAsistencia> RegistroAsistencia
		{
			get
			{
				return this._RegistroAsistencia;
			}
			set
			{
				this._RegistroAsistencia.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_DatosInfante", Storage="_Usuario", ThisKey="idAcudiente", OtherKey="idUsuario", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.DatosInfante.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.DatosInfante.Add(this);
						this._idAcudiente = value.idUsuario;
					}
					else
					{
						this._idAcudiente = default(int);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Jardin_DatosInfante", Storage="_Jardin", ThisKey="idJardin", OtherKey="idJardin", IsForeignKey=true)]
		public Jardin Jardin
		{
			get
			{
				return this._Jardin.Entity;
			}
			set
			{
				Jardin previousValue = this._Jardin.Entity;
				if (((previousValue != value) 
							|| (this._Jardin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Jardin.Entity = null;
						previousValue.DatosInfante.Remove(this);
					}
					this._Jardin.Entity = value;
					if ((value != null))
					{
						value.DatosInfante.Add(this);
						this._idJardin = value.idJardin;
					}
					else
					{
						this._idJardin = default(int);
					}
					this.SendPropertyChanged("Jardin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persona_DatosInfante", Storage="_Persona", ThisKey="idInfante", OtherKey="idPersona", IsForeignKey=true)]
		public Persona Persona
		{
			get
			{
				return this._Persona.Entity;
			}
			set
			{
				Persona previousValue = this._Persona.Entity;
				if (((previousValue != value) 
							|| (this._Persona.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Persona.Entity = null;
						previousValue.DatosInfante.Remove(this);
					}
					this._Persona.Entity = value;
					if ((value != null))
					{
						value.DatosInfante.Add(this);
						this._idInfante = value.idPersona;
					}
					else
					{
						this._idInfante = default(int);
					}
					this.SendPropertyChanged("Persona");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RegistroAcademico(RegistroAcademico entity)
		{
			this.SendPropertyChanging();
			entity.DatosInfante = this;
		}
		
		private void detach_RegistroAcademico(RegistroAcademico entity)
		{
			this.SendPropertyChanging();
			entity.DatosInfante = null;
		}
		
		private void attach_RegistroAsistencia(RegistroAsistencia entity)
		{
			this.SendPropertyChanging();
			entity.DatosInfante = this;
		}
		
		private void detach_RegistroAsistencia(RegistroAsistencia entity)
		{
			this.SendPropertyChanging();
			entity.DatosInfante = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Jardin")]
	public partial class Jardin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idJardin;
		
		private string _nombre;
		
		private string _direccion;
		
		private int _idEstado;
		
		private byte _habilitado;
		
		private EntitySet<DatosInfante> _DatosInfante;
		
		private EntityRef<Master> _Master;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidJardinChanging(int value);
    partial void OnidJardinChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OndireccionChanging(string value);
    partial void OndireccionChanged();
    partial void OnidEstadoChanging(int value);
    partial void OnidEstadoChanged();
    partial void OnhabilitadoChanging(byte value);
    partial void OnhabilitadoChanged();
    #endregion
		
		public Jardin()
		{
			this._DatosInfante = new EntitySet<DatosInfante>(new Action<DatosInfante>(this.attach_DatosInfante), new Action<DatosInfante>(this.detach_DatosInfante));
			this._Master = default(EntityRef<Master>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idJardin", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idJardin
		{
			get
			{
				return this._idJardin;
			}
			set
			{
				if ((this._idJardin != value))
				{
					this.OnidJardinChanging(value);
					this.SendPropertyChanging();
					this._idJardin = value;
					this.SendPropertyChanged("idJardin");
					this.OnidJardinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_direccion", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string direccion
		{
			get
			{
				return this._direccion;
			}
			set
			{
				if ((this._direccion != value))
				{
					this.OndireccionChanging(value);
					this.SendPropertyChanging();
					this._direccion = value;
					this.SendPropertyChanged("direccion");
					this.OndireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEstado", DbType="Int NOT NULL")]
		public int idEstado
		{
			get
			{
				return this._idEstado;
			}
			set
			{
				if ((this._idEstado != value))
				{
					if (this._Master.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEstadoChanging(value);
					this.SendPropertyChanging();
					this._idEstado = value;
					this.SendPropertyChanged("idEstado");
					this.OnidEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_habilitado", DbType="TinyInt NOT NULL")]
		public byte habilitado
		{
			get
			{
				return this._habilitado;
			}
			set
			{
				if ((this._habilitado != value))
				{
					this.OnhabilitadoChanging(value);
					this.SendPropertyChanging();
					this._habilitado = value;
					this.SendPropertyChanged("habilitado");
					this.OnhabilitadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Jardin_DatosInfante", Storage="_DatosInfante", ThisKey="idJardin", OtherKey="idJardin")]
		public EntitySet<DatosInfante> DatosInfante
		{
			get
			{
				return this._DatosInfante;
			}
			set
			{
				this._DatosInfante.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Master_Jardin", Storage="_Master", ThisKey="idEstado", OtherKey="idMaster", IsForeignKey=true)]
		public Master Master
		{
			get
			{
				return this._Master.Entity;
			}
			set
			{
				Master previousValue = this._Master.Entity;
				if (((previousValue != value) 
							|| (this._Master.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Master.Entity = null;
						previousValue.Jardin.Remove(this);
					}
					this._Master.Entity = value;
					if ((value != null))
					{
						value.Jardin.Add(this);
						this._idEstado = value.idMaster;
					}
					else
					{
						this._idEstado = default(int);
					}
					this.SendPropertyChanged("Master");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DatosInfante(DatosInfante entity)
		{
			this.SendPropertyChanging();
			entity.Jardin = this;
		}
		
		private void detach_DatosInfante(DatosInfante entity)
		{
			this.SendPropertyChanging();
			entity.Jardin = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Master")]
	public partial class Master : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idMaster;
		
		private System.Nullable<int> _idDependencia;
		
		private string _nombre;
		
		private string _descripcion;
		
		private byte _habilitado;
		
		private EntitySet<Jardin> _Jardin;
		
		private EntitySet<Master> _Master2;
		
		private EntitySet<Persona> _Persona;
		
		private EntitySet<RegistroAcademico> _RegistroAcademico;
		
		private EntitySet<RegistroAcademico> _RegistroAcademico1;
		
		private EntitySet<RegistroAsistencia> _RegistroAsistencia;
		
		private EntityRef<Master> _Master1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidMasterChanging(int value);
    partial void OnidMasterChanged();
    partial void OnidDependenciaChanging(System.Nullable<int> value);
    partial void OnidDependenciaChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OnhabilitadoChanging(byte value);
    partial void OnhabilitadoChanged();
    #endregion
		
		public Master()
		{
			this._Jardin = new EntitySet<Jardin>(new Action<Jardin>(this.attach_Jardin), new Action<Jardin>(this.detach_Jardin));
			this._Master2 = new EntitySet<Master>(new Action<Master>(this.attach_Master2), new Action<Master>(this.detach_Master2));
			this._Persona = new EntitySet<Persona>(new Action<Persona>(this.attach_Persona), new Action<Persona>(this.detach_Persona));
			this._RegistroAcademico = new EntitySet<RegistroAcademico>(new Action<RegistroAcademico>(this.attach_RegistroAcademico), new Action<RegistroAcademico>(this.detach_RegistroAcademico));
			this._RegistroAcademico1 = new EntitySet<RegistroAcademico>(new Action<RegistroAcademico>(this.attach_RegistroAcademico1), new Action<RegistroAcademico>(this.detach_RegistroAcademico1));
			this._RegistroAsistencia = new EntitySet<RegistroAsistencia>(new Action<RegistroAsistencia>(this.attach_RegistroAsistencia), new Action<RegistroAsistencia>(this.detach_RegistroAsistencia));
			this._Master1 = default(EntityRef<Master>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMaster", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idMaster
		{
			get
			{
				return this._idMaster;
			}
			set
			{
				if ((this._idMaster != value))
				{
					this.OnidMasterChanging(value);
					this.SendPropertyChanging();
					this._idMaster = value;
					this.SendPropertyChanged("idMaster");
					this.OnidMasterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDependencia", DbType="Int")]
		public System.Nullable<int> idDependencia
		{
			get
			{
				return this._idDependencia;
			}
			set
			{
				if ((this._idDependencia != value))
				{
					if (this._Master1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDependenciaChanging(value);
					this.SendPropertyChanging();
					this._idDependencia = value;
					this.SendPropertyChanged("idDependencia");
					this.OnidDependenciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="VarChar(255)")]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_habilitado", DbType="TinyInt NOT NULL")]
		public byte habilitado
		{
			get
			{
				return this._habilitado;
			}
			set
			{
				if ((this._habilitado != value))
				{
					this.OnhabilitadoChanging(value);
					this.SendPropertyChanging();
					this._habilitado = value;
					this.SendPropertyChanged("habilitado");
					this.OnhabilitadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Master_Jardin", Storage="_Jardin", ThisKey="idMaster", OtherKey="idEstado")]
		public EntitySet<Jardin> Jardin
		{
			get
			{
				return this._Jardin;
			}
			set
			{
				this._Jardin.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Master_Master", Storage="_Master2", ThisKey="idMaster", OtherKey="idDependencia")]
		public EntitySet<Master> Master2
		{
			get
			{
				return this._Master2;
			}
			set
			{
				this._Master2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Master_Persona", Storage="_Persona", ThisKey="idMaster", OtherKey="tipoDocumento")]
		public EntitySet<Persona> Persona
		{
			get
			{
				return this._Persona;
			}
			set
			{
				this._Persona.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Master_RegistroAcademico", Storage="_RegistroAcademico", ThisKey="idMaster", OtherKey="idNivel")]
		public EntitySet<RegistroAcademico> RegistroAcademico
		{
			get
			{
				return this._RegistroAcademico;
			}
			set
			{
				this._RegistroAcademico.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Master_RegistroAcademico1", Storage="_RegistroAcademico1", ThisKey="idMaster", OtherKey="idNota")]
		public EntitySet<RegistroAcademico> RegistroAcademico1
		{
			get
			{
				return this._RegistroAcademico1;
			}
			set
			{
				this._RegistroAcademico1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Master_RegistroAsistencia", Storage="_RegistroAsistencia", ThisKey="idMaster", OtherKey="estadoInfante")]
		public EntitySet<RegistroAsistencia> RegistroAsistencia
		{
			get
			{
				return this._RegistroAsistencia;
			}
			set
			{
				this._RegistroAsistencia.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Master_Master", Storage="_Master1", ThisKey="idDependencia", OtherKey="idMaster", IsForeignKey=true)]
		public Master Master1
		{
			get
			{
				return this._Master1.Entity;
			}
			set
			{
				Master previousValue = this._Master1.Entity;
				if (((previousValue != value) 
							|| (this._Master1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Master1.Entity = null;
						previousValue.Master2.Remove(this);
					}
					this._Master1.Entity = value;
					if ((value != null))
					{
						value.Master2.Add(this);
						this._idDependencia = value.idMaster;
					}
					else
					{
						this._idDependencia = default(Nullable<int>);
					}
					this.SendPropertyChanged("Master1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Jardin(Jardin entity)
		{
			this.SendPropertyChanging();
			entity.Master = this;
		}
		
		private void detach_Jardin(Jardin entity)
		{
			this.SendPropertyChanging();
			entity.Master = null;
		}
		
		private void attach_Master2(Master entity)
		{
			this.SendPropertyChanging();
			entity.Master1 = this;
		}
		
		private void detach_Master2(Master entity)
		{
			this.SendPropertyChanging();
			entity.Master1 = null;
		}
		
		private void attach_Persona(Persona entity)
		{
			this.SendPropertyChanging();
			entity.Master = this;
		}
		
		private void detach_Persona(Persona entity)
		{
			this.SendPropertyChanging();
			entity.Master = null;
		}
		
		private void attach_RegistroAcademico(RegistroAcademico entity)
		{
			this.SendPropertyChanging();
			entity.Master = this;
		}
		
		private void detach_RegistroAcademico(RegistroAcademico entity)
		{
			this.SendPropertyChanging();
			entity.Master = null;
		}
		
		private void attach_RegistroAcademico1(RegistroAcademico entity)
		{
			this.SendPropertyChanging();
			entity.Master1 = this;
		}
		
		private void detach_RegistroAcademico1(RegistroAcademico entity)
		{
			this.SendPropertyChanging();
			entity.Master1 = null;
		}
		
		private void attach_RegistroAsistencia(RegistroAsistencia entity)
		{
			this.SendPropertyChanging();
			entity.Master = this;
		}
		
		private void detach_RegistroAsistencia(RegistroAsistencia entity)
		{
			this.SendPropertyChanging();
			entity.Master = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Permiso")]
	public partial class Permiso : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idPermiso;
		
		private System.Nullable<int> _idDependencia;
		
		private string _nombre;
		
		private string _descripcion;
		
		private byte _habilitado;
		
		private EntitySet<Permiso> _Permiso2;
		
		private EntitySet<PermisoRol> _PermisoRol;
		
		private EntityRef<Permiso> _Permiso1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPermisoChanging(int value);
    partial void OnidPermisoChanged();
    partial void OnidDependenciaChanging(System.Nullable<int> value);
    partial void OnidDependenciaChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OnhabilitadoChanging(byte value);
    partial void OnhabilitadoChanged();
    #endregion
		
		public Permiso()
		{
			this._Permiso2 = new EntitySet<Permiso>(new Action<Permiso>(this.attach_Permiso2), new Action<Permiso>(this.detach_Permiso2));
			this._PermisoRol = new EntitySet<PermisoRol>(new Action<PermisoRol>(this.attach_PermisoRol), new Action<PermisoRol>(this.detach_PermisoRol));
			this._Permiso1 = default(EntityRef<Permiso>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPermiso", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idPermiso
		{
			get
			{
				return this._idPermiso;
			}
			set
			{
				if ((this._idPermiso != value))
				{
					this.OnidPermisoChanging(value);
					this.SendPropertyChanging();
					this._idPermiso = value;
					this.SendPropertyChanged("idPermiso");
					this.OnidPermisoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDependencia", DbType="Int")]
		public System.Nullable<int> idDependencia
		{
			get
			{
				return this._idDependencia;
			}
			set
			{
				if ((this._idDependencia != value))
				{
					if (this._Permiso1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDependenciaChanging(value);
					this.SendPropertyChanging();
					this._idDependencia = value;
					this.SendPropertyChanged("idDependencia");
					this.OnidDependenciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="VarChar(255)")]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_habilitado", DbType="TinyInt NOT NULL")]
		public byte habilitado
		{
			get
			{
				return this._habilitado;
			}
			set
			{
				if ((this._habilitado != value))
				{
					this.OnhabilitadoChanging(value);
					this.SendPropertyChanging();
					this._habilitado = value;
					this.SendPropertyChanged("habilitado");
					this.OnhabilitadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permiso_Permiso", Storage="_Permiso2", ThisKey="idPermiso", OtherKey="idDependencia")]
		public EntitySet<Permiso> Permiso2
		{
			get
			{
				return this._Permiso2;
			}
			set
			{
				this._Permiso2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permiso_PermisoRol", Storage="_PermisoRol", ThisKey="idPermiso", OtherKey="idPermiso")]
		public EntitySet<PermisoRol> PermisoRol
		{
			get
			{
				return this._PermisoRol;
			}
			set
			{
				this._PermisoRol.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permiso_Permiso", Storage="_Permiso1", ThisKey="idDependencia", OtherKey="idPermiso", IsForeignKey=true)]
		public Permiso Permiso1
		{
			get
			{
				return this._Permiso1.Entity;
			}
			set
			{
				Permiso previousValue = this._Permiso1.Entity;
				if (((previousValue != value) 
							|| (this._Permiso1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Permiso1.Entity = null;
						previousValue.Permiso2.Remove(this);
					}
					this._Permiso1.Entity = value;
					if ((value != null))
					{
						value.Permiso2.Add(this);
						this._idDependencia = value.idPermiso;
					}
					else
					{
						this._idDependencia = default(Nullable<int>);
					}
					this.SendPropertyChanged("Permiso1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Permiso2(Permiso entity)
		{
			this.SendPropertyChanging();
			entity.Permiso1 = this;
		}
		
		private void detach_Permiso2(Permiso entity)
		{
			this.SendPropertyChanging();
			entity.Permiso1 = null;
		}
		
		private void attach_PermisoRol(PermisoRol entity)
		{
			this.SendPropertyChanging();
			entity.Permiso = this;
		}
		
		private void detach_PermisoRol(PermisoRol entity)
		{
			this.SendPropertyChanging();
			entity.Permiso = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PermisoRol")]
	public partial class PermisoRol : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idPermisoRol;
		
		private int _idRol;
		
		private int _idPermiso;
		
		private byte _habilitado;
		
		private EntityRef<Permiso> _Permiso;
		
		private EntityRef<Rol> _Rol;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPermisoRolChanging(int value);
    partial void OnidPermisoRolChanged();
    partial void OnidRolChanging(int value);
    partial void OnidRolChanged();
    partial void OnidPermisoChanging(int value);
    partial void OnidPermisoChanged();
    partial void OnhabilitadoChanging(byte value);
    partial void OnhabilitadoChanged();
    #endregion
		
		public PermisoRol()
		{
			this._Permiso = default(EntityRef<Permiso>);
			this._Rol = default(EntityRef<Rol>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPermisoRol", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idPermisoRol
		{
			get
			{
				return this._idPermisoRol;
			}
			set
			{
				if ((this._idPermisoRol != value))
				{
					this.OnidPermisoRolChanging(value);
					this.SendPropertyChanging();
					this._idPermisoRol = value;
					this.SendPropertyChanged("idPermisoRol");
					this.OnidPermisoRolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idRol", DbType="Int NOT NULL")]
		public int idRol
		{
			get
			{
				return this._idRol;
			}
			set
			{
				if ((this._idRol != value))
				{
					if (this._Rol.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidRolChanging(value);
					this.SendPropertyChanging();
					this._idRol = value;
					this.SendPropertyChanged("idRol");
					this.OnidRolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPermiso", DbType="Int NOT NULL")]
		public int idPermiso
		{
			get
			{
				return this._idPermiso;
			}
			set
			{
				if ((this._idPermiso != value))
				{
					if (this._Permiso.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPermisoChanging(value);
					this.SendPropertyChanging();
					this._idPermiso = value;
					this.SendPropertyChanged("idPermiso");
					this.OnidPermisoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_habilitado", DbType="TinyInt NOT NULL")]
		public byte habilitado
		{
			get
			{
				return this._habilitado;
			}
			set
			{
				if ((this._habilitado != value))
				{
					this.OnhabilitadoChanging(value);
					this.SendPropertyChanging();
					this._habilitado = value;
					this.SendPropertyChanged("habilitado");
					this.OnhabilitadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permiso_PermisoRol", Storage="_Permiso", ThisKey="idPermiso", OtherKey="idPermiso", IsForeignKey=true)]
		public Permiso Permiso
		{
			get
			{
				return this._Permiso.Entity;
			}
			set
			{
				Permiso previousValue = this._Permiso.Entity;
				if (((previousValue != value) 
							|| (this._Permiso.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Permiso.Entity = null;
						previousValue.PermisoRol.Remove(this);
					}
					this._Permiso.Entity = value;
					if ((value != null))
					{
						value.PermisoRol.Add(this);
						this._idPermiso = value.idPermiso;
					}
					else
					{
						this._idPermiso = default(int);
					}
					this.SendPropertyChanged("Permiso");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rol_PermisoRol", Storage="_Rol", ThisKey="idRol", OtherKey="idRol", IsForeignKey=true)]
		public Rol Rol
		{
			get
			{
				return this._Rol.Entity;
			}
			set
			{
				Rol previousValue = this._Rol.Entity;
				if (((previousValue != value) 
							|| (this._Rol.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rol.Entity = null;
						previousValue.PermisoRol.Remove(this);
					}
					this._Rol.Entity = value;
					if ((value != null))
					{
						value.PermisoRol.Add(this);
						this._idRol = value.idRol;
					}
					else
					{
						this._idRol = default(int);
					}
					this.SendPropertyChanged("Rol");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Persona")]
	public partial class Persona : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idPersona;
		
		private string _nombre;
		
		private System.Nullable<System.DateTime> _fechaNacimiento;
		
		private System.Nullable<int> _ciudadNacimiento;
		
		private string _telefono;
		
		private string _tipoSangre;
		
		private string _direccion;
		
		private string _correo;
		
		private string _celular;
		
		private int _tipoDocumento;
		
		private string _numeroDocumento;
		
		private byte _habilitado;
		
		private EntitySet<Usuario> _Usuario;
		
		private EntitySet<DatosInfante> _DatosInfante;
		
		private EntityRef<Ciudad> _Ciudad;
		
		private EntityRef<Master> _Master;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPersonaChanging(int value);
    partial void OnidPersonaChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnfechaNacimientoChanging(System.Nullable<System.DateTime> value);
    partial void OnfechaNacimientoChanged();
    partial void OnciudadNacimientoChanging(System.Nullable<int> value);
    partial void OnciudadNacimientoChanged();
    partial void OntelefonoChanging(string value);
    partial void OntelefonoChanged();
    partial void OntipoSangreChanging(string value);
    partial void OntipoSangreChanged();
    partial void OndireccionChanging(string value);
    partial void OndireccionChanged();
    partial void OncorreoChanging(string value);
    partial void OncorreoChanged();
    partial void OncelularChanging(string value);
    partial void OncelularChanged();
    partial void OntipoDocumentoChanging(int value);
    partial void OntipoDocumentoChanged();
    partial void OnnumeroDocumentoChanging(string value);
    partial void OnnumeroDocumentoChanged();
    partial void OnhabilitadoChanging(byte value);
    partial void OnhabilitadoChanged();
    #endregion
		
		public Persona()
		{
			this._Usuario = new EntitySet<Usuario>(new Action<Usuario>(this.attach_Usuario), new Action<Usuario>(this.detach_Usuario));
			this._DatosInfante = new EntitySet<DatosInfante>(new Action<DatosInfante>(this.attach_DatosInfante), new Action<DatosInfante>(this.detach_DatosInfante));
			this._Ciudad = default(EntityRef<Ciudad>);
			this._Master = default(EntityRef<Master>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPersona", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idPersona
		{
			get
			{
				return this._idPersona;
			}
			set
			{
				if ((this._idPersona != value))
				{
					this.OnidPersonaChanging(value);
					this.SendPropertyChanging();
					this._idPersona = value;
					this.SendPropertyChanged("idPersona");
					this.OnidPersonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fechaNacimiento", DbType="DateTime")]
		public System.Nullable<System.DateTime> fechaNacimiento
		{
			get
			{
				return this._fechaNacimiento;
			}
			set
			{
				if ((this._fechaNacimiento != value))
				{
					this.OnfechaNacimientoChanging(value);
					this.SendPropertyChanging();
					this._fechaNacimiento = value;
					this.SendPropertyChanged("fechaNacimiento");
					this.OnfechaNacimientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ciudadNacimiento", DbType="Int")]
		public System.Nullable<int> ciudadNacimiento
		{
			get
			{
				return this._ciudadNacimiento;
			}
			set
			{
				if ((this._ciudadNacimiento != value))
				{
					if (this._Ciudad.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnciudadNacimientoChanging(value);
					this.SendPropertyChanging();
					this._ciudadNacimiento = value;
					this.SendPropertyChanged("ciudadNacimiento");
					this.OnciudadNacimientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefono", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string telefono
		{
			get
			{
				return this._telefono;
			}
			set
			{
				if ((this._telefono != value))
				{
					this.OntelefonoChanging(value);
					this.SendPropertyChanging();
					this._telefono = value;
					this.SendPropertyChanged("telefono");
					this.OntelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tipoSangre", DbType="VarChar(10)")]
		public string tipoSangre
		{
			get
			{
				return this._tipoSangre;
			}
			set
			{
				if ((this._tipoSangre != value))
				{
					this.OntipoSangreChanging(value);
					this.SendPropertyChanging();
					this._tipoSangre = value;
					this.SendPropertyChanged("tipoSangre");
					this.OntipoSangreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_direccion", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string direccion
		{
			get
			{
				return this._direccion;
			}
			set
			{
				if ((this._direccion != value))
				{
					this.OndireccionChanging(value);
					this.SendPropertyChanging();
					this._direccion = value;
					this.SendPropertyChanged("direccion");
					this.OndireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_correo", DbType="VarChar(255)")]
		public string correo
		{
			get
			{
				return this._correo;
			}
			set
			{
				if ((this._correo != value))
				{
					this.OncorreoChanging(value);
					this.SendPropertyChanging();
					this._correo = value;
					this.SendPropertyChanged("correo");
					this.OncorreoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_celular", DbType="VarChar(50)")]
		public string celular
		{
			get
			{
				return this._celular;
			}
			set
			{
				if ((this._celular != value))
				{
					this.OncelularChanging(value);
					this.SendPropertyChanging();
					this._celular = value;
					this.SendPropertyChanged("celular");
					this.OncelularChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tipoDocumento", DbType="Int NOT NULL")]
		public int tipoDocumento
		{
			get
			{
				return this._tipoDocumento;
			}
			set
			{
				if ((this._tipoDocumento != value))
				{
					if (this._Master.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntipoDocumentoChanging(value);
					this.SendPropertyChanging();
					this._tipoDocumento = value;
					this.SendPropertyChanged("tipoDocumento");
					this.OntipoDocumentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numeroDocumento", DbType="VarChar(50)")]
		public string numeroDocumento
		{
			get
			{
				return this._numeroDocumento;
			}
			set
			{
				if ((this._numeroDocumento != value))
				{
					this.OnnumeroDocumentoChanging(value);
					this.SendPropertyChanging();
					this._numeroDocumento = value;
					this.SendPropertyChanged("numeroDocumento");
					this.OnnumeroDocumentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_habilitado", DbType="TinyInt NOT NULL")]
		public byte habilitado
		{
			get
			{
				return this._habilitado;
			}
			set
			{
				if ((this._habilitado != value))
				{
					this.OnhabilitadoChanging(value);
					this.SendPropertyChanging();
					this._habilitado = value;
					this.SendPropertyChanged("habilitado");
					this.OnhabilitadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persona_Usuario", Storage="_Usuario", ThisKey="idPersona", OtherKey="idPersona")]
		public EntitySet<Usuario> Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				this._Usuario.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persona_DatosInfante", Storage="_DatosInfante", ThisKey="idPersona", OtherKey="idInfante")]
		public EntitySet<DatosInfante> DatosInfante
		{
			get
			{
				return this._DatosInfante;
			}
			set
			{
				this._DatosInfante.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ciudad_Persona", Storage="_Ciudad", ThisKey="ciudadNacimiento", OtherKey="idCiudad", IsForeignKey=true)]
		public Ciudad Ciudad
		{
			get
			{
				return this._Ciudad.Entity;
			}
			set
			{
				Ciudad previousValue = this._Ciudad.Entity;
				if (((previousValue != value) 
							|| (this._Ciudad.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ciudad.Entity = null;
						previousValue.Persona.Remove(this);
					}
					this._Ciudad.Entity = value;
					if ((value != null))
					{
						value.Persona.Add(this);
						this._ciudadNacimiento = value.idCiudad;
					}
					else
					{
						this._ciudadNacimiento = default(Nullable<int>);
					}
					this.SendPropertyChanged("Ciudad");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Master_Persona", Storage="_Master", ThisKey="tipoDocumento", OtherKey="idMaster", IsForeignKey=true)]
		public Master Master
		{
			get
			{
				return this._Master.Entity;
			}
			set
			{
				Master previousValue = this._Master.Entity;
				if (((previousValue != value) 
							|| (this._Master.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Master.Entity = null;
						previousValue.Persona.Remove(this);
					}
					this._Master.Entity = value;
					if ((value != null))
					{
						value.Persona.Add(this);
						this._tipoDocumento = value.idMaster;
					}
					else
					{
						this._tipoDocumento = default(int);
					}
					this.SendPropertyChanged("Master");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Persona = this;
		}
		
		private void detach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Persona = null;
		}
		
		private void attach_DatosInfante(DatosInfante entity)
		{
			this.SendPropertyChanging();
			entity.Persona = this;
		}
		
		private void detach_DatosInfante(DatosInfante entity)
		{
			this.SendPropertyChanging();
			entity.Persona = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RegistroAcademico")]
	public partial class RegistroAcademico : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idRegistroAcademiso;
		
		private int _idInfante;
		
		private string _anioEscolar;
		
		private int _idNivel;
		
		private int _idNota;
		
		private string _descripcion;
		
		private System.DateTime _fechaEntrega;
		
		private byte _habilitado;
		
		private EntityRef<DatosInfante> _DatosInfante;
		
		private EntityRef<Master> _Master;
		
		private EntityRef<Master> _Master1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidRegistroAcademisoChanging(int value);
    partial void OnidRegistroAcademisoChanged();
    partial void OnidInfanteChanging(int value);
    partial void OnidInfanteChanged();
    partial void OnanioEscolarChanging(string value);
    partial void OnanioEscolarChanged();
    partial void OnidNivelChanging(int value);
    partial void OnidNivelChanged();
    partial void OnidNotaChanging(int value);
    partial void OnidNotaChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OnfechaEntregaChanging(System.DateTime value);
    partial void OnfechaEntregaChanged();
    partial void OnhabilitadoChanging(byte value);
    partial void OnhabilitadoChanged();
    #endregion
		
		public RegistroAcademico()
		{
			this._DatosInfante = default(EntityRef<DatosInfante>);
			this._Master = default(EntityRef<Master>);
			this._Master1 = default(EntityRef<Master>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idRegistroAcademiso", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idRegistroAcademiso
		{
			get
			{
				return this._idRegistroAcademiso;
			}
			set
			{
				if ((this._idRegistroAcademiso != value))
				{
					this.OnidRegistroAcademisoChanging(value);
					this.SendPropertyChanging();
					this._idRegistroAcademiso = value;
					this.SendPropertyChanged("idRegistroAcademiso");
					this.OnidRegistroAcademisoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idInfante", DbType="Int NOT NULL")]
		public int idInfante
		{
			get
			{
				return this._idInfante;
			}
			set
			{
				if ((this._idInfante != value))
				{
					if (this._DatosInfante.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidInfanteChanging(value);
					this.SendPropertyChanging();
					this._idInfante = value;
					this.SendPropertyChanged("idInfante");
					this.OnidInfanteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_anioEscolar", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string anioEscolar
		{
			get
			{
				return this._anioEscolar;
			}
			set
			{
				if ((this._anioEscolar != value))
				{
					this.OnanioEscolarChanging(value);
					this.SendPropertyChanging();
					this._anioEscolar = value;
					this.SendPropertyChanged("anioEscolar");
					this.OnanioEscolarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idNivel", DbType="Int NOT NULL")]
		public int idNivel
		{
			get
			{
				return this._idNivel;
			}
			set
			{
				if ((this._idNivel != value))
				{
					if (this._Master.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidNivelChanging(value);
					this.SendPropertyChanging();
					this._idNivel = value;
					this.SendPropertyChanged("idNivel");
					this.OnidNivelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idNota", DbType="Int NOT NULL")]
		public int idNota
		{
			get
			{
				return this._idNota;
			}
			set
			{
				if ((this._idNota != value))
				{
					if (this._Master1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidNotaChanging(value);
					this.SendPropertyChanging();
					this._idNota = value;
					this.SendPropertyChanged("idNota");
					this.OnidNotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fechaEntrega", DbType="DateTime NOT NULL")]
		public System.DateTime fechaEntrega
		{
			get
			{
				return this._fechaEntrega;
			}
			set
			{
				if ((this._fechaEntrega != value))
				{
					this.OnfechaEntregaChanging(value);
					this.SendPropertyChanging();
					this._fechaEntrega = value;
					this.SendPropertyChanged("fechaEntrega");
					this.OnfechaEntregaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_habilitado", DbType="TinyInt NOT NULL")]
		public byte habilitado
		{
			get
			{
				return this._habilitado;
			}
			set
			{
				if ((this._habilitado != value))
				{
					this.OnhabilitadoChanging(value);
					this.SendPropertyChanging();
					this._habilitado = value;
					this.SendPropertyChanged("habilitado");
					this.OnhabilitadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DatosInfante_RegistroAcademico", Storage="_DatosInfante", ThisKey="idInfante", OtherKey="idDatosInfante", IsForeignKey=true)]
		public DatosInfante DatosInfante
		{
			get
			{
				return this._DatosInfante.Entity;
			}
			set
			{
				DatosInfante previousValue = this._DatosInfante.Entity;
				if (((previousValue != value) 
							|| (this._DatosInfante.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DatosInfante.Entity = null;
						previousValue.RegistroAcademico.Remove(this);
					}
					this._DatosInfante.Entity = value;
					if ((value != null))
					{
						value.RegistroAcademico.Add(this);
						this._idInfante = value.idDatosInfante;
					}
					else
					{
						this._idInfante = default(int);
					}
					this.SendPropertyChanged("DatosInfante");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Master_RegistroAcademico", Storage="_Master", ThisKey="idNivel", OtherKey="idMaster", IsForeignKey=true)]
		public Master Master
		{
			get
			{
				return this._Master.Entity;
			}
			set
			{
				Master previousValue = this._Master.Entity;
				if (((previousValue != value) 
							|| (this._Master.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Master.Entity = null;
						previousValue.RegistroAcademico.Remove(this);
					}
					this._Master.Entity = value;
					if ((value != null))
					{
						value.RegistroAcademico.Add(this);
						this._idNivel = value.idMaster;
					}
					else
					{
						this._idNivel = default(int);
					}
					this.SendPropertyChanged("Master");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Master_RegistroAcademico1", Storage="_Master1", ThisKey="idNota", OtherKey="idMaster", IsForeignKey=true)]
		public Master Master1
		{
			get
			{
				return this._Master1.Entity;
			}
			set
			{
				Master previousValue = this._Master1.Entity;
				if (((previousValue != value) 
							|| (this._Master1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Master1.Entity = null;
						previousValue.RegistroAcademico1.Remove(this);
					}
					this._Master1.Entity = value;
					if ((value != null))
					{
						value.RegistroAcademico1.Add(this);
						this._idNota = value.idMaster;
					}
					else
					{
						this._idNota = default(int);
					}
					this.SendPropertyChanged("Master1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RegistroAsistencia")]
	public partial class RegistroAsistencia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idRegistroAsistencia;
		
		private int _idInfante;
		
		private int _estadoInfante;
		
		private System.DateTime _fecha;
		
		private byte _asistencia;
		
		private byte _habilitado;
		
		private EntityRef<DatosInfante> _DatosInfante;
		
		private EntityRef<Master> _Master;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidRegistroAsistenciaChanging(int value);
    partial void OnidRegistroAsistenciaChanged();
    partial void OnidInfanteChanging(int value);
    partial void OnidInfanteChanged();
    partial void OnestadoInfanteChanging(int value);
    partial void OnestadoInfanteChanged();
    partial void OnfechaChanging(System.DateTime value);
    partial void OnfechaChanged();
    partial void OnasistenciaChanging(byte value);
    partial void OnasistenciaChanged();
    partial void OnhabilitadoChanging(byte value);
    partial void OnhabilitadoChanged();
    #endregion
		
		public RegistroAsistencia()
		{
			this._DatosInfante = default(EntityRef<DatosInfante>);
			this._Master = default(EntityRef<Master>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idRegistroAsistencia", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idRegistroAsistencia
		{
			get
			{
				return this._idRegistroAsistencia;
			}
			set
			{
				if ((this._idRegistroAsistencia != value))
				{
					this.OnidRegistroAsistenciaChanging(value);
					this.SendPropertyChanging();
					this._idRegistroAsistencia = value;
					this.SendPropertyChanged("idRegistroAsistencia");
					this.OnidRegistroAsistenciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idInfante", DbType="Int NOT NULL")]
		public int idInfante
		{
			get
			{
				return this._idInfante;
			}
			set
			{
				if ((this._idInfante != value))
				{
					if (this._DatosInfante.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidInfanteChanging(value);
					this.SendPropertyChanging();
					this._idInfante = value;
					this.SendPropertyChanged("idInfante");
					this.OnidInfanteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estadoInfante", DbType="Int NOT NULL")]
		public int estadoInfante
		{
			get
			{
				return this._estadoInfante;
			}
			set
			{
				if ((this._estadoInfante != value))
				{
					if (this._Master.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnestadoInfanteChanging(value);
					this.SendPropertyChanging();
					this._estadoInfante = value;
					this.SendPropertyChanged("estadoInfante");
					this.OnestadoInfanteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha", DbType="DateTime NOT NULL")]
		public System.DateTime fecha
		{
			get
			{
				return this._fecha;
			}
			set
			{
				if ((this._fecha != value))
				{
					this.OnfechaChanging(value);
					this.SendPropertyChanging();
					this._fecha = value;
					this.SendPropertyChanged("fecha");
					this.OnfechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_asistencia", DbType="TinyInt NOT NULL")]
		public byte asistencia
		{
			get
			{
				return this._asistencia;
			}
			set
			{
				if ((this._asistencia != value))
				{
					this.OnasistenciaChanging(value);
					this.SendPropertyChanging();
					this._asistencia = value;
					this.SendPropertyChanged("asistencia");
					this.OnasistenciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_habilitado", DbType="TinyInt NOT NULL")]
		public byte habilitado
		{
			get
			{
				return this._habilitado;
			}
			set
			{
				if ((this._habilitado != value))
				{
					this.OnhabilitadoChanging(value);
					this.SendPropertyChanging();
					this._habilitado = value;
					this.SendPropertyChanged("habilitado");
					this.OnhabilitadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DatosInfante_RegistroAsistencia", Storage="_DatosInfante", ThisKey="idInfante", OtherKey="idDatosInfante", IsForeignKey=true)]
		public DatosInfante DatosInfante
		{
			get
			{
				return this._DatosInfante.Entity;
			}
			set
			{
				DatosInfante previousValue = this._DatosInfante.Entity;
				if (((previousValue != value) 
							|| (this._DatosInfante.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DatosInfante.Entity = null;
						previousValue.RegistroAsistencia.Remove(this);
					}
					this._DatosInfante.Entity = value;
					if ((value != null))
					{
						value.RegistroAsistencia.Add(this);
						this._idInfante = value.idDatosInfante;
					}
					else
					{
						this._idInfante = default(int);
					}
					this.SendPropertyChanged("DatosInfante");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Master_RegistroAsistencia", Storage="_Master", ThisKey="estadoInfante", OtherKey="idMaster", IsForeignKey=true)]
		public Master Master
		{
			get
			{
				return this._Master.Entity;
			}
			set
			{
				Master previousValue = this._Master.Entity;
				if (((previousValue != value) 
							|| (this._Master.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Master.Entity = null;
						previousValue.RegistroAsistencia.Remove(this);
					}
					this._Master.Entity = value;
					if ((value != null))
					{
						value.RegistroAsistencia.Add(this);
						this._estadoInfante = value.idMaster;
					}
					else
					{
						this._estadoInfante = default(int);
					}
					this.SendPropertyChanged("Master");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rol")]
	public partial class Rol : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idRol;
		
		private string _nombre;
		
		private string _descripcion;
		
		private byte _habilitado;
		
		private EntitySet<Usuario> _Usuario;
		
		private EntitySet<PermisoRol> _PermisoRol;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidRolChanging(int value);
    partial void OnidRolChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OnhabilitadoChanging(byte value);
    partial void OnhabilitadoChanged();
    #endregion
		
		public Rol()
		{
			this._Usuario = new EntitySet<Usuario>(new Action<Usuario>(this.attach_Usuario), new Action<Usuario>(this.detach_Usuario));
			this._PermisoRol = new EntitySet<PermisoRol>(new Action<PermisoRol>(this.attach_PermisoRol), new Action<PermisoRol>(this.detach_PermisoRol));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idRol", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idRol
		{
			get
			{
				return this._idRol;
			}
			set
			{
				if ((this._idRol != value))
				{
					this.OnidRolChanging(value);
					this.SendPropertyChanging();
					this._idRol = value;
					this.SendPropertyChanged("idRol");
					this.OnidRolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_habilitado", DbType="TinyInt NOT NULL")]
		public byte habilitado
		{
			get
			{
				return this._habilitado;
			}
			set
			{
				if ((this._habilitado != value))
				{
					this.OnhabilitadoChanging(value);
					this.SendPropertyChanging();
					this._habilitado = value;
					this.SendPropertyChanged("habilitado");
					this.OnhabilitadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rol_Usuario", Storage="_Usuario", ThisKey="idRol", OtherKey="idRol")]
		public EntitySet<Usuario> Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				this._Usuario.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rol_PermisoRol", Storage="_PermisoRol", ThisKey="idRol", OtherKey="idRol")]
		public EntitySet<PermisoRol> PermisoRol
		{
			get
			{
				return this._PermisoRol;
			}
			set
			{
				this._PermisoRol.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Rol = this;
		}
		
		private void detach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Rol = null;
		}
		
		private void attach_PermisoRol(PermisoRol entity)
		{
			this.SendPropertyChanging();
			entity.Rol = this;
		}
		
		private void detach_PermisoRol(PermisoRol entity)
		{
			this.SendPropertyChanging();
			entity.Rol = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ListarJardines")]
	public partial class ListarJardines
	{
		
		private int _idJardin;
		
		private string _jardin;
		
		private string _estado;
		
		public ListarJardines()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idJardin", DbType="Int NOT NULL")]
		public int idJardin
		{
			get
			{
				return this._idJardin;
			}
			set
			{
				if ((this._idJardin != value))
				{
					this._idJardin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_jardin", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string jardin
		{
			get
			{
				return this._jardin;
			}
			set
			{
				if ((this._jardin != value))
				{
					this._jardin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estado", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string estado
		{
			get
			{
				return this._estado;
			}
			set
			{
				if ((this._estado != value))
				{
					this._estado = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
